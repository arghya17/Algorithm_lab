import numpy as np
import sys,os

def shuffle(arr):
    n=10
    data=[]
    nums=np.copy(arr)
    '''very important part we create a copy because of the reference to the array
if we simply append the arr to the data=[] then we create only a referrece to the arrary arr as a result when arr is shuffled
in place the previous appended arrays in data structure also gets shuffled creating the same 10 copies of the same shuffled
array which is produced at the end. For more info as to see why this happens look up pass by reference and pass by value 
or mutable and immutable objects in python
'''
    data.append(arr)
    if len(arr)==2:
        return np.array([arr])
    if(len(arr)<=10):
        np.random.shuffle(nums)
        a=np.copy(nums)
        data.append(a)
        return np.array(data)
    for i in range(10):
        np.random.shuffle(nums)
        a=np.copy(nums)
        data.append(a)
    return np.array(data)

int_max=pow(2,18)
def generator(file_name):
    with open(file_name) as file:
        nums=file.read()
        nums=nums.split()
        nums=list(map(int,nums))
    nums=np.array(nums)
    data=[]
    i=2
    while(i<=int_max):
        if i>10 and i :
            data.append(shuffle(nums[0:(i-i//3)]))#some more data rather than only 2^n is generated by this
        data.append(shuffle(nums[0:i]))
        # a=nums[0:i]
        # np.random.shuffle(a)
        # print(a,nums[0:i])
        i=i*2
    data=np.array(data)
    print(data)
    return data

